#include <stdio.h>
#include <stdlib.h>
#define SIZE 102
 
int peb[SIZE][SIZE];  //양립하는 패턴을 고려한 최대 합계 
int w[SIZE][SIZE];  //패턴에 따른 각 열의 합계 
int m[SIZE][SIZE]; //매트릭스 
  
int pebble(int n){
    int i, j, p, max;
      
    for(i=0;i<n;i++){
        for(p=1;p<=4;p++){
            if(p==1)w[i][p] = m[0][i];
            else if(p==2)w[i][p] = m[1][i];
            else if(p==3)w[i][p] = m[2][i];
            else w[i][p] = m[0][i] + m[2][i];
        }
    }
      
    for(p=1;p<=4;p++)
        peb[0][p] = w[0][p];
      
    for(i=1;i<n;i++){   
        for(p=1;p<=4;p++){
            if(p==1){
            if(peb[i-1][2]<peb[i-1][3]) max = peb[i-1][3];
            else max = peb[i-1][2];
        }
         
        else if(p==2){
            if(peb[i-1][1]>peb[i-1][3] && peb[i-1][1]>peb[i-1][4]) max = peb[i-1][1];
            else if(peb[i-1][3]>peb[i-1][1] && peb[i-1][3]>peb[i-1][4])max = peb[i-1][3];
            else if(peb[i-1][4]>peb[i-1][1] && peb[i-1][4]>peb[i-1][3])max = peb[i-1][4];
        }
        
        else if(p==3){
            if(peb[i-1][1]<peb[i-1][2]) max = peb[i-1][2];
            else max = peb[i-1][1];
            }
        else max = peb[i-1][2];
 
            peb[i][p] = max + w[i][p] ;
    }
    }
   max= 0;
    for(i=1;i<=4;i++){
        if(max < peb[n-1][i]) max = peb[n-1][i];
    }
    return max;
}
  
int main(){
    int n, i, j, max;
      
    scanf("%d",&n);
     
    for(i=0;i<3;i++)
        for(j=0;j<n;j++)
            scanf("%d",&m[i][j]);
   
    max = pebble(n);
    printf("%d",max);
    return 0;
}


/*
PebbleSum
Contents
  소년 스티브 잡스는 심심해서 보드게임을 사러 갔다. 보드게임 가게 주인장은 새로 나온 게임이라면서 "조약돌 놓기" 게임을 소개 시켜주었다. 게임의 규칙은 다음과 같다. 

3*N 테이블의 각 칸에는 양 또는 음의 정수가 기록 되어 있다.
조약돌을 놓는 방법
각 열에는 적어도 하나의 조약돌을 놓아야 한다
가로나 세로로 인접한 두 칸에 동시에 조약돌을 놓을 수 없다.
  퍼즐에 능수능란한 재능을 지녔던 스티브 잡스는 조약돌을 보드 판에 놓기 시작했다. 얼마 지나지 않아서 스티브 잡스는 규칙을 파악 할 수 있었고 모든 경우의 수를 구하여 조약돌을 놓는 것은 삽질 이라는 것을 깨달았다. 그리고 문제의 최종적인 목표는 규칙에 맞게 조약돌을 놓고 조약돌이 놓인 자리의 모든 수를 더했을 때 그것이 최대가 되는 것을 구하는 것이다. 

  여러분이 할 일은 스티브 잡스를 도와 최대값을 구하는 프로그램을 작성하는 것이다.

Input
첫 줄에는 보드판의 가로 크기 m (m<=100)이 들어온다. 

그 다음 3줄에는 각 행의 원소값이 들어온다. 

 

Output
규칙에 맞게 조약돌을 놓고 그 합의 모든 경우의 수중 가장 큰 값을 출력한다.

 

Sample Input
8
6 7 12 -5 5 3 11 3
-8 10 14 9 7 13 8 5
11 12 7 4 8 -2 9 4
 
Sample Output
106

오답(정답4, 오답1)

#include <stdio.h>
#include <stdlib.h>
#define SIZE 102
 
int peb[SIZE][SIZE];  //양립하는 패턴을 고려한 최대 합계 
int w[SIZE][SIZE];  //패턴에 따른 각 열의 합계 
int m[SIZE][SIZE]; //매트릭스 
  
int pebble(int n){
    int i, j, p, max;
      
    for(i=0;i<n;i++){
        for(p=1;p<=4;p++){
            if(p==1)w[i][p] = m[0][i];
            else if(p==2)w[i][p] = m[1][i];
            else if(p==3)w[i][p] = m[2][i];
            else w[i][p] = m[0][i] + m[2][i];
        }
    }
      
    for(p=1;p<=4;p++)
        peb[0][p] = w[0][p];
      
    for(i=1;i<n;i++){   
        for(p=1;p<=4;p++){
            if(p==1){
            if(peb[i-1][2]<peb[i-1][3]) max = peb[i-1][3];
            else max = peb[i-1][2];
        }
        else if(p==2){
            if(peb[i-1][1]>peb[i-1][3]){
            if(peb[i-1][1]>peb[i-1][4]) max = peb[i-1][1];
            else max = peb[i-1][4];}
            else if(peb[i-1][3]>peb[i-1][1]){
                 if (peb[i-1][3]>peb[i-1][4]) max = peb[i-1][3];
                 else max = peb[i-1][4];
            }
            }
        else if(p==3){
            if(peb[i-1][1]<peb[i-1][2]) max = peb[i-1][2];
            else max = peb[i-1][1];
            }
        else max = peb[i-1][2];
 
            peb[i][p] = max + w[i][p] ;
    }
    }
   max= 0;
    for(i=1;i<=4;i++){
        if(max < peb[n-1][i]) max = peb[n-1][i];
    }
    return max;
}
  
int main(){
    int n, i, j, max;
      
    scanf("%d",&n);
     
    for(i=0;i<3;i++)
        for(j=0;j<n;j++)
            scanf("%d",&m[i][j]);
   
    max = pebble(n);
    printf("%d",max);
    return 0;
}
*/